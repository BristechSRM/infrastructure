#!/bin/sh -u

exec 3>&1 # make stdout available as fd 3 for the result
exec 1>&2 # redirect all output to stderr for logging

buffer=$(cat)

#Extract variables from json
serviceName=$(echo $buffer | jq -r '.source.serviceName')
repository=$(echo $buffer | jq -r '.source.repository')
portNumber=$(echo $buffer | jq -r '.source.portNumber')
network=$(echo $buffer | jq -r '.source.network')
swarmMaster=$(echo $buffer | jq -r '.source.swarmMaster')

export DOCKER_HOST="${swarmMaster}"

echo --- SERVICE INFO ---
echo serviceName: ${serviceName}
echo repository: ${repository}
echo portNumber: ${portNumber}
echo network: ${network}
echo swarmMaster: ${swarmMaster}
echo DOCKER_HOST: ${DOCKER_HOST}
echo --- END ---

set -v

docker version

docker service rm ${serviceName}

docker pull ${repository}

#
# The nodes do not have the same command line.
# Some need secrets on the boxes mounted into the images, some publish a port, others do neither.
# It's longer but clearer to just do them individually.
#

if [ ${serviceName} = "auth" ]; then

    docker service create \
        --name=${serviceName} \
        --network=${network} \
        --publish ${portNumber}:8080 \
        --mount type=bind,source=/home/ubuntu/Auth.exe.secrets,target=/service/Auth.exe.secrets \
        --mount type=bind,source=/home/ubuntu/AuthCertificate.pfx,target=/AuthCertificate.pfx \
        ${repository}

elif [ ${serviceName} = "comms" ]; then

    docker service create \
        --name=${serviceName} \
        --network=${network} \
        --mount type=bind,source=/home/ubuntu/Comms.exe.secrets,target=/service/Comms.exe.secrets \
        ${repository}

elif [ ${serviceName} = "sessions" ]; then

    docker service create \
        --name=${serviceName} \
        --network=${network} \
        ${repository}

elif [ ${serviceName} = "gateway" ]; then

    docker service create \
        --name=${serviceName} \
        --network=${network} \
        --publish ${portNumber}:8080 \
        ${repository}

elif [ ${serviceName} = "frontend" ]; then

    docker service create \
        --name=${serviceName} \
        --network=${network} \
        --publish ${portNumber}:8080 \
        ${repository}

else

    echo "ERROR: Unknown microservice"
    exit 1
fi

echo '{ "version": { "ref": "'$BUILD_ID'" } }' >&3
