#!/bin/sh -u

exec 3>&1 # make stdout available as fd 3 for the result
exec 1>&2 # redirect all output to stderr for logging

buffer=$(cat)

#Extract variables from json
serviceName=$(echo $buffer | jq -r '.source.serviceName')
repository=$(echo $buffer | jq -r '.source.repository')
executableName=$(echo $buffer | jq -r '.source.executableName')
nodeName=$(echo $buffer | jq -r '.source.nodeName')
portNumber=$(echo $buffer | jq -r '.source.portNumber')
network=$(echo $buffer | jq -r '.source.network')
swarmMaster=$(echo $buffer | jq -r '.source.swarmMaster')

export DOCKER_HOST="${swarmMaster}"

echo --- SERVICE INFO ---
echo serviceName: ${serviceName}
echo repository: ${repository}
echo executableName: ${executableName}
echo portNumber: ${portNumber}
echo network: ${network}
echo swarmMaster: ${swarmMaster}
echo DOCKER_HOST: ${DOCKER_HOST}
echo --- END ---

set -v

docker version

docker service rm ${serviceName}

docker pull ${repository}

# This treats all nodes the same, so it is necessarily a superset
# The extra volume mounts are harmless, if annoying
if [ -n "${portNumber%null}" ]; then

    docker service create \
        --name=${serviceName} \
        --publish ${portNumber}:8080 \
        --network=${network} \
        --mount type=bind,source=/home/ubuntu/${executableName}.exe.config,target=/service/${executableName}.exe.config \
        --mount type=bind,source=/home/ubuntu/${executableName}.exe.secrets,target=/service/${executableName}.exe.secrets \
        --mount type=bind,source=/home/ubuntu/AuthCertificate.pfx,target=/AuthCertificate.pfx \
        ${repository}
else

    docker service create \
        --name=${serviceName} \
        --network=${network} \
        --mount type=bind,source=/home/ubuntu/${executableName}.exe.config,target=/service/${executableName}.exe.config \
        --mount type=bind,source=/home/ubuntu/${executableName}.exe.secrets,target=/service/${executableName}.exe.secrets \
        --mount type=bind,source=/home/ubuntu/AuthCertificate.pfx,target=/AuthCertificate.pfx \
        ${repository}
fi

echo '{ "version": { "ref": "'$BUILD_ID'" } }' >&3
